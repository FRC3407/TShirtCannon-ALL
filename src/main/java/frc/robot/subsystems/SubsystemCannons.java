// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.PneumaticsModuleType;
import edu.wpi.first.wpilibj.Solenoid;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class SubsystemCannons extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private Compressor airCompressor;
private Solenoid solenoidY;
private Solenoid solenoidB;
private Solenoid solenoidA;
private Solenoid solenoidX;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public SubsystemCannons() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        airCompressor = new Compressor(0, PneumaticsModuleType.CTREPCM);
        addChild("Air Compressor",airCompressor);
        

        solenoidY = new Solenoid(0, PneumaticsModuleType.CTREPCM, 0);
        addChild("Solenoid Y", solenoidY);
        solenoidY.setPulseDuration(.2);

        solenoidB = new Solenoid(0, PneumaticsModuleType.CTREPCM, 1);
        addChild("Solenoid B", solenoidB);
        solenoidB.setPulseDuration(.2);

        solenoidA = new Solenoid(0, PneumaticsModuleType.CTREPCM, 2);
        addChild("Solenoid A", solenoidA);
        solenoidA.setPulseDuration(.2);

        solenoidX = new Solenoid(0, PneumaticsModuleType.CTREPCM, 3);
        addChild("Solenoid X", solenoidX);
        solenoidX.setPulseDuration(.2);


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    public void fireCannons(int numCannon)
    {
        switch (numCannon)
        {
            case 0:
            solenoidY.startPulse();
            break;
            case 1:
            solenoidB.startPulse();
            break;
            case 2:
            solenoidA.startPulse();
            break;
            case 3:
            solenoidX.startPulse();
            break;
        }
    }
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

