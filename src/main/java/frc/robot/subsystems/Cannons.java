// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.PneumaticsModuleType;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Cannons extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private Solenoid cannon0;
private Solenoid cannon1;
private Solenoid cannon2;
private Solenoid cannon3;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private final double PULSE_DURATION = 0.1;   
private final int NUM_CANNONS = 4;
private final Solenoid cannon_list[] = new Solenoid[NUM_CANNONS];
    /**
    *
    */
    public Cannons() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
cannon0 = new Solenoid(0, PneumaticsModuleType.CTREPCM, 0);
 addChild("cannon0", cannon0);
 

cannon1 = new Solenoid(0, PneumaticsModuleType.CTREPCM, 1);
 addChild("cannon1", cannon1);
 

cannon2 = new Solenoid(0, PneumaticsModuleType.CTREPCM, 2);
 addChild("cannon2", cannon2);
 

cannon3 = new Solenoid(0, PneumaticsModuleType.CTREPCM, 3);
 addChild("cannon3", cannon3);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        cannon_list[0] = cannon0;
        cannon_list[1] = cannon1;
        cannon_list[2] = cannon2;
        cannon_list[3] = cannon3;

        for(Solenoid cannon : cannon_list) {
            cannon.setPulseDuration(PULSE_DURATION);
        }
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void fireCannon(int i) {
        if(i >=0 && i < NUM_CANNONS) {
            cannon_list[i].startPulse();
        }
    }
}

